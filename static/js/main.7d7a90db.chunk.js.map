{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Todo","this","props","completed","title","userId","selectUser","type","className","ClassNames","value","onClick","event","React","PureComponent","TodoList","todos","query","status","filteredTodos","filter","todo","toLowerCase","includes","map","id","key","defaultProps","getSelectedUser","fetch","then","response","json","result","data","CurrentUser","state","userInfo","setState","prevProps","name","email","phone","clearInfo","Component","App","selectedUserId","target","clearUserInfo","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d7a90db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport class Todo extends React.PureComponent {\n  render() {\n    const { completed, title, userId, selectUser } = this.props;\n\n    return (\n      <>\n        <label>\n          <input type=\"checkbox\" className=\"sss\" />\n          <p>{title}</p>\n        </label>\n\n        <button\n          className={ClassNames('TodoList__user-button', 'button', {\n            'TodoList__user-button--selected': completed,\n          })}\n          type=\"button\"\n          value={userId}\n          onClick={event => selectUser(event)}\n        >\n          {`User #${userId}`}\n        </button>\n      </>\n    );\n  }\n}\nTodo.propTypes = {\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { Todo } from '../Todo/Todo';\n\nexport class TodoList extends React.PureComponent {\n  render() {\n    const { todos, selectUser, query, status } = this.props;\n\n    let filteredTodos = todos\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase()));\n\n    if (status === 'Active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (status === 'Finished') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    return (\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(({ completed, id, title, userId }) => (\n            <li\n              key={id}\n              className={ClassNames('TodoList__item', {\n                'TodoList__item--checked': completed,\n                'TodoList__item--unchecked': !completed,\n              })}\n            >\n              <Todo\n                completed={completed}\n                title={title}\n                userId={userId}\n                selectUser={selectUser}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n  })),\n  query: PropTypes.string,\n  status: PropTypes.string,\n  selectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  query: '',\n  status: '',\n  todos: [],\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport const getTodos = () => fetch(TODOS_URL)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getSelectedUser = userId => fetch(`${USERS_URL}${userId}`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getSelectedUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    userInfo: null,\n  }\n\n  componentDidMount() {\n    getSelectedUser(this.props.userId)\n      .then(userInfo => this.setState({\n        userInfo,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getSelectedUser(this.props.userId)\n      .then(userInfo => this.setState({\n        userInfo,\n      }));\n  }\n\n  render() {\n    const { userInfo } = this.state;\n\n    return (!userInfo)\n      ? 'No info about user'\n      : (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {userInfo.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{userInfo.name}</h3>\n          <p className=\"CurrentUser__email\">{userInfo.email}</p>\n          <p className=\"CurrentUser__phone\">{userInfo.phone}</p>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__clear-button\"\n            onClick={this.props.clearInfo}\n          >\n            Clear info\n          </button>\n        </div>\n      );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearInfo: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n  userInfo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }),\n};\n\nCurrentUser.defaultProps = {\n  userInfo: {},\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    query: '',\n    status: 'All',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({\n        todos: [...todos].filter(todo => todo.userId != null),\n      }));\n  }\n\n  selectUser = (event) => {\n    const { value } = event.target;\n\n    this.setState({ selectedUserId: value });\n  }\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId, query, status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            className=\"App__search\"\n            type=\"text\"\n            placeholder=\"Enter todo title\"\n            value={query}\n            onChange={(event) => {\n              this.setState({ query: event.target.value });\n            }}\n          />\n          <select\n            onChange={event => this.setState({ status: event.target.value })\n            }\n            className=\"App__select-visible\"\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Finished\">Finished</option>\n            <option value=\"Active\">Active</option>\n          </select>\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n            query={query}\n            status={status}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearInfo={this.clearUserInfo}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}